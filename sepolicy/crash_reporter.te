type crash_reporter, domain;
type crash_reporter_data_file, file_type, data_file_type;
type crash_reporter_exec, exec_type, file_type;
type crash_reporter_prop, property_type;

# Permissions for crash collector directory.
allow crash_reporter crash_reporter_data_file:dir create_dir_perms;
allow crash_reporter crash_reporter_data_file:file create_file_perms;

# Allow starting from init.
init_daemon_domain(crash_reporter)

# Allow setting supplementary groups.
allow crash_reporter crash_reporter:capability { setgid };

# Allow using metrics_lib.
allow crash_reporter metrics_data_file:dir ra_dir_perms;
allow crash_reporter metrics_data_file:file create_file_perms;

# Allow setting crash reporter properties.
set_prop(crash_reporter, crash_reporter_prop)

# Allow access to brillo core dump files.
r_dir_file(crash_reporter, brillo)
allow crash_reporter brillo_exec:file r_file_perms;

# Permissions for calling dbus-send and signaling metrics.
allow crash_reporter kernel:fifo_file r_file_perms;
#TODO(b/23280203): Remove shell_exec policy once system() call is removed.
allow crash_reporter shell_exec:file rx_file_perms;

# Allow calling core2md.
allow crash_reporter crash_reporter_exec:file rx_file_perms;

# Allow calling dbus-send.
allow crash_reporter crash_reporter:capability { setuid };
allow crash_reporter dbus_daemon_exec:file rx_file_perms;
unix_socket_connect(crash_reporter, dbus_daemon, dbus_daemon)

dontaudit crash_reporter kernel:system module_request;
