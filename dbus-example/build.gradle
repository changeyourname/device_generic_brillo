/*
 * Copyright (C) 2015 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/* Return the android build root. */
def gettop = {
    File cwd = new File('.').absoluteFile
    while (!(new File(cwd, 'build/core/envsetup.mk')).isFile()) {
        cwd = cwd.parentFile
    }
    return cwd
}

ext.android_build_root = gettop()
ext.nr_threads = Runtime.runtime.availableProcessors()

/* Invoke an Android Build System command. */
def call_abs(cmd) {
    String full_cmd = 'source "' + android_build_root + '/build/envsetup.sh" && ' + cmd
    println 'Calling ' + full_cmd
    exec {
        commandLine 'sh', '-c', full_cmd
    }
}

task build << {
    call_abs 'mm -j ' + nr_threads
}

task clean << {
    call_abs 'm clean'
}

task buildAll << {
    call_abs 'm -j ' + nr_threads
}

task emulator(type: Exec) {
    commandLine 'emulator-arm'
}
